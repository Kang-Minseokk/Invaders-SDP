#name: Build and Deploy JAR on Tag
#
#on:
#  push:
#    tags:
#      - 'release/v*' # release/vX.X.X 형태의 태그에 반응
#  workflow_dispatch: # 수동으로 실행할 수 있는 옵션
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      # 1. 체크아웃
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      # 2. JDK 설정
#      - name: Set up JDK 23
#        uses: actions/setup-java@v4
#        with:
#          java-version: '23'
#          distribution: 'temurin'
#
#      # 3. Gradle 캐싱
#      - name: Cache Gradle dependencies
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      # 4. Gradle Build
#      - name: Build JAR
#        run: ./gradlew clean build --no-daemon
#
#      # 5. Extract Version from Tag
#      - name: Extract version from tag
#        id: extract_version
#        run: |
#          VERSION=${GITHUB_REF#refs/tags/release/}
#          echo "VERSION=$VERSION" >> $GITHUB_ENV
#          echo "Extracted version: $VERSION"
#
#      # 6. Upload JAR as Artifact
#      - name: Upload JAR
#        uses: actions/upload-artifact@v4
#        with:
#          name: MyApp-${{ env.VERSION }}.jar
#          path: build/libs/*.jar # JAR 파일 경로